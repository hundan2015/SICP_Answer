#lang sicp
(define (make-point x y) (cons x y))
(define (x-point p) (car p))
(define (y-point p) (cdr p))
(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")"))

(define (make-segment p1 p2) (cons p1 p2))
(define (start-segment seg) (car seg))
(define (end-segment seg) (cdr seg))
(define (midpoint-segment seg) (let ((x1 (x-point (start-segment seg)))
                                     (x2 (x-point (end-segment seg)))
                                     (y1 (y-point (start-segment seg)))
                                     (y2 (y-point (end-segment seg))))
                                 (make-point (/ (+ x1 x2) 2.0) (/ (+ y1 y2) 2.0))))

(define p1 (make-point 100 10))
(define p2 (make-point 50 20))
(define seg (make-segment p1 p2))
(print-point (midpoint-segment seg))
